#!/bin/bash

# Script that takes a Jupyter Notebook as input, and creates:
# a .sync.ipynb version that it opens with a jupyter notebook server
# a .sync.py version that it gets using jupytext, opens this in nvim.

# Check if the correct number of arguments is provided
if [ "$#" -ne 1 ]; then
  echo "Usage: format-jupy <filename>.ipynb"
  exit 1
fi

jupy_filename="$1"

# Check if the file extension is ipynb
if [[ "${jupy_filename##*.}" != "ipynb" ]]; then
  echo "Invalid file extension. Only .ipynb files are allowed."
  exit 1
fi

if [[ ! "$jupy_filename" == *.sync.ipynb ]]; then
  # Generate the new filename with ".sync" prepended before the extension
  jupy_sync_filename="${jupy_filename%.*}.sync.${jupy_filename##*.}"

  if [ ! -e "$jupy_sync_filename" ]; then
    # Copy the file with the new filename
    ln -s "$jupy_filename" "$jupy_sync_filename"
  fi
else
  jupy_sync_filename=$jupy_sync_filename
fi

py_filename="${jupy_filename%.*}.py"
py_sync_filename="${py_filename%.*}.sync.${py_filename##*.}"

if [ ! -e "$py_filename" ]; then
  jupytext --set-formats ipynb,py:percent "$jupy_filename"
fi

if [ ! -e "$py_sync_filename" ]; then
  ln -s "$py_filename" "$py_sync_filename"
fi

echo "$jupy_sync_filename"
echo "$py_sync_filename"

tmux new-window -n "jupyter server" "jupyter notebook $jupy_sync_filename"
tmux last-window
nvim $py_sync_filename
